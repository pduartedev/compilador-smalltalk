TOKEN_identifier Object
TOKEN_subclass  subclass:
TOKEN_identifier ClasseTeste
TOKEN_left_bracket [
TOKEN_keyword testesCompletos
TOKEN_identifier param_int
TOKEN_keyword with
TOKEN_identifier param_float
TOKEN_keyword withBool
TOKEN_identifier param_boolean
TOKEN_left_bracket [
TOKEN_pipe
TOKEN_identifier resultado_int1
TOKEN_identifier resultado_int2
TOKEN_identifier resultado_int3
TOKEN_identifier resultado_int4
TOKEN_identifier resultado_int5
TOKEN_identifier resultado_float1
TOKEN_identifier resultado_float2
TOKEN_identifier resultado_float3
TOKEN_identifier resultado_float4
TOKEN_identifier resultado_bool1
TOKEN_identifier resultado_bool2
TOKEN_identifier resultado_bool3
TOKEN_identifier resultado_final
TOKEN_pipe
TOKEN_identifier param_int
TOKEN_assignment_operator :=
TOKEN_decimal_integer 50
TOKEN_period .
TOKEN_identifier param_float
TOKEN_assignment_operator :=
TOKEN_float 2.5
TOKEN_period .
TOKEN_identifier param_boolean
TOKEN_assignment_operator :=
TOKEN_true true
TOKEN_period .
TOKEN_identifier resultado_int1
TOKEN_assignment_operator :=
TOKEN_identifier param_int
TOKEN_binary_selector +
TOKEN_decimal_integer 15
TOKEN_binary_selector *
TOKEN_decimal_integer 2
TOKEN_period .
TOKEN_identifier resultado_int2
TOKEN_assignment_operator :=
TOKEN_left_paren (
TOKEN_identifier resultado_int1
TOKEN_binary_selector -
TOKEN_decimal_integer 30
TOKEN_right_paren )
TOKEN_binary_selector %
TOKEN_decimal_integer 7
TOKEN_period .
TOKEN_identifier resultado_int3
TOKEN_assignment_operator :=
TOKEN_identifier resultado_int2
TOKEN_binary_selector *
TOKEN_decimal_integer 3
TOKEN_binary_selector +
TOKEN_decimal_integer 8
TOKEN_period .
TOKEN_identifier resultado_int4
TOKEN_assignment_operator :=
TOKEN_identifier resultado_int3
TOKEN_binary_selector /
TOKEN_decimal_integer 4
TOKEN_binary_selector +
TOKEN_decimal_integer 10
TOKEN_period .
TOKEN_identifier resultado_int5
TOKEN_assignment_operator :=
TOKEN_identifier resultado_int4
TOKEN_binary_selector %
TOKEN_decimal_integer 6
TOKEN_binary_selector *
TOKEN_decimal_integer 5
TOKEN_period .
TOKEN_identifier resultado_float1
TOKEN_assignment_operator :=
TOKEN_identifier param_float
TOKEN_binary_selector *
TOKEN_float 4.2
TOKEN_binary_selector +
TOKEN_float 1.8
TOKEN_period .
TOKEN_identifier resultado_float2
TOKEN_assignment_operator :=
TOKEN_left_paren (
TOKEN_identifier resultado_float1
TOKEN_binary_selector -
TOKEN_float 3.5
TOKEN_right_paren )
TOKEN_binary_selector /
TOKEN_float 2.0
TOKEN_period .
TOKEN_identifier resultado_float3
TOKEN_assignment_operator :=
TOKEN_identifier resultado_float2
TOKEN_binary_selector +
TOKEN_float 7.3
TOKEN_binary_selector *
TOKEN_float 1.5
TOKEN_period .
TOKEN_identifier resultado_float4
TOKEN_assignment_operator :=
TOKEN_identifier resultado_float3
TOKEN_binary_selector /
TOKEN_float 3.0
TOKEN_binary_selector -
TOKEN_float 0.8
TOKEN_period .
TOKEN_identifier resultado_final
TOKEN_assignment_operator :=
TOKEN_identifier resultado_float4
TOKEN_binary_selector +
TOKEN_identifier resultado_int5
TOKEN_period .
TOKEN_identifier resultado_bool1
TOKEN_assignment_operator :=
TOKEN_identifier param_int
TOKEN_binary_selector <
TOKEN_decimal_integer 100
TOKEN_period .
TOKEN_identifier resultado_bool2
TOKEN_assignment_operator :=
TOKEN_identifier resultado_float1
TOKEN_binary_selector ==
TOKEN_float 12.3
TOKEN_period .
TOKEN_identifier resultado_bool3
TOKEN_assignment_operator :=
TOKEN_left_paren (
TOKEN_identifier resultado_int1
TOKEN_binary_selector +
TOKEN_decimal_integer 10
TOKEN_right_paren )
TOKEN_binary_selector <
TOKEN_left_paren (
TOKEN_identifier resultado_int2
TOKEN_binary_selector *
TOKEN_decimal_integer 2
TOKEN_right_paren )
TOKEN_period .
TOKEN_identifier resultado_bool1
TOKEN_assignment_operator :=
TOKEN_identifier resultado_bool1
TOKEN_binary_selector &
TOKEN_identifier param_boolean
TOKEN_period .
TOKEN_identifier resultado_bool2
TOKEN_assignment_operator :=
TOKEN_identifier resultado_bool2
TOKEN_binary_selector |
TOKEN_identifier resultado_bool1
TOKEN_period .
TOKEN_identifier resultado_bool3
TOKEN_assignment_operator :=
TOKEN_identifier resultado_bool3
TOKEN_binary_selector &
TOKEN_left_paren (
TOKEN_identifier param_int
TOKEN_binary_selector >
TOKEN_decimal_integer 25
TOKEN_right_paren )
TOKEN_period .
TOKEN_identifier resultado_bool1
TOKEN_assignment_operator :=
TOKEN_identifier resultado_bool1
TOKEN_identifier not
TOKEN_period .
TOKEN_identifier resultado_bool2
TOKEN_assignment_operator :=
TOKEN_left_paren (
TOKEN_identifier resultado_bool2
TOKEN_binary_selector |
TOKEN_identifier resultado_bool3
TOKEN_right_paren )
TOKEN_identifier not
TOKEN_period .
TOKEN_identifier param_int
TOKEN_binary_selector >
TOKEN_decimal_integer 30
TOKEN_keyword ifTrue:
TOKEN_left_bracket [
TOKEN_identifier resultado_final
TOKEN_assignment_operator :=
TOKEN_identifier resultado_final
TOKEN_binary_selector +
TOKEN_decimal_integer 100
TOKEN_right_bracket ]
TOKEN_keyword ifFalse:
TOKEN_left_bracket [
TOKEN_identifier resultado_final
TOKEN_assignment_operator :=
TOKEN_identifier resultado_final
TOKEN_binary_selector -
TOKEN_decimal_integer 50
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_identifier resultado_int1
TOKEN_assignment_operator :=
TOKEN_decimal_integer 0
TOKEN_period .
TOKEN_left_bracket [
TOKEN_identifier resultado_int1
TOKEN_binary_selector <
TOKEN_decimal_integer 3
TOKEN_right_bracket ]
TOKEN_keyword whileTrue:
TOKEN_left_bracket [
TOKEN_identifier resultado_int1
TOKEN_assignment_operator :=
TOKEN_identifier resultado_int1
TOKEN_binary_selector +
TOKEN_decimal_integer 1
TOKEN_period .
TOKEN_identifier resultado_final
TOKEN_assignment_operator :=
TOKEN_identifier resultado_final
TOKEN_binary_selector +
TOKEN_decimal_integer 10
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_return_operator ^
TOKEN_identifier resultado_bool3
TOKEN_right_bracket ]
TOKEN_right_bracket ]
$ $