TOKEN_identifier Object
TOKEN_subclass  subclass:
TOKEN_identifier MinhaClasse
TOKEN_left_bracket [
TOKEN_keyword F28:
TOKEN_identifier n
TOKEN_keyword com:
TOKEN_identifier a
TOKEN_keyword e:
TOKEN_identifier b
TOKEN_left_bracket [
TOKEN_pipe |
TOKEN_identifier sum
TOKEN_pipe |
TOKEN_identifier sum
TOKEN_assignment_operator :=
TOKEN_decimal_integer 0
TOKEN_period .
TOKEN_identifier n
TOKEN_binary_selector <=
TOKEN_decimal_integer 0
TOKEN_keyword ifTrue:
TOKEN_left_bracket [
TOKEN_return_operator ^
TOKEN_decimal_integer 0
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_identifier a
TOKEN_binary_selector >
TOKEN_identifier b
TOKEN_keyword ifTrue:
TOKEN_left_bracket [
TOKEN_identifier sum
TOKEN_assignment_operator :=
TOKEN_identifier a
TOKEN_binary_selector -
TOKEN_identifier b
TOKEN_right_bracket ]
TOKEN_keyword ifFalse:
TOKEN_left_bracket [
TOKEN_identifier sum
TOKEN_assignment_operator :=
TOKEN_identifier b
TOKEN_binary_selector -
TOKEN_identifier a
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_left_bracket [
TOKEN_identifier n
TOKEN_binary_selector >
TOKEN_decimal_integer 0
TOKEN_right_bracket ]
TOKEN_keyword whileTrue:
TOKEN_left_bracket [
TOKEN_identifier sum
TOKEN_assignment_operator :=
TOKEN_identifier sum
TOKEN_binary_selector +
TOKEN_identifier n
TOKEN_period .
TOKEN_identifier n
TOKEN_assignment_operator :=
TOKEN_identifier n
TOKEN_binary_selector -
TOKEN_decimal_integer 1
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_identifier n
TOKEN_assignment_operator :=
TOKEN_decimal_integer 0
TOKEN_period .
TOKEN_left_bracket [
TOKEN_identifier n
TOKEN_binary_selector <
TOKEN_decimal_integer 3
TOKEN_right_bracket ]
TOKEN_keyword whileTrue:
TOKEN_left_bracket [
TOKEN_identifier sum
TOKEN_assignment_operator :=
TOKEN_identifier sum
TOKEN_binary_selector +
TOKEN_identifier n
TOKEN_period .
TOKEN_identifier n
TOKEN_assignment_operator :=
TOKEN_identifier n
TOKEN_binary_selector +
TOKEN_decimal_integer 1
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_identifier sum
TOKEN_binary_selector >
TOKEN_decimal_integer 10
TOKEN_keyword ifTrue:
TOKEN_left_bracket [
TOKEN_return_operator ^
TOKEN_self self
TOKEN_keyword F50:
TOKEN_identifier sum
TOKEN_binary_selector /
TOKEN_decimal_integer 3
TOKEN_keyword com:
TOKEN_identifier a
TOKEN_keyword e:
TOKEN_identifier b
TOKEN_right_bracket ]
TOKEN_period .
TOKEN_return_operator ^
TOKEN_identifier sum
TOKEN_right_bracket ]
TOKEN_right_bracket ]
$ $
